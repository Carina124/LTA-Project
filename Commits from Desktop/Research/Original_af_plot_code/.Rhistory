current_loci <- loci_vec[k]
#loop iterates through each CSV file
for( j in 1:length(freq_vec)){
file_name <- read_csv(freq_vec[j])
file_mat <- as.matrix(file_name)
#loop iterates through colums of file and checks if it matches current loci
for (i in 2:dim(file_mat)[2]){
name =  colnames(file_mat)[i]
if(name == current_loci){
loci_vector <- file_mat[,i]
#print(loci_vector)
isthere = !is.na(loci_vector)
#print(isthere)
isthere_loci <- loci_vector[isthere]
print(isthere_loci)
loci_sqrd <- ((as.numeric(isthere_loci))^2)
loci_sum <- sum(loci_sqrd)
####opposite orer of te file --switch those two ---ask Rori
#print(sigma_eq)
sigma_eq <- c(sigma_eq,loci_sum)
exp_homo <- (1/length(sigma_eq[i])*sigma_eq)
exp_heteroZ <- (1-exp_homo)
#print(exp_heteroZ)
}
}
}
}
loci_vec <- c("FGA","TPOX","CSF1PO","TH01","D8S1179","D3S1358","D7S820","D16S539",
"D21S11","D2S1338","D19S433",
"vWA","D18S51")
freq_vec <- c("Afri_paper.csv")
#initializes sigma_eq
sigma_eq <- c()
#loop that iterates through the 13 loci in Loci_vec
for (k in 1:length(loci_vec)){
current_loci <- loci_vec[k]
#loop iterates through each CSV file
for( j in 1:length(freq_vec)){
file_name <- read_csv(freq_vec[j])
file_mat <- as.matrix(file_name)
#loop iterates through colums of file and checks if it matches current loci
for (i in 2:dim(file_mat)[2]){
name =  colnames(file_mat)[i]
if(name == current_loci){
loci_vector <- file_mat[,i]
#print(loci_vector)
isthere = !is.na(loci_vector)
#print(isthere)
isthere_loci <- loci_vector[isthere]
print(isthere_loci)
loci_sqrd <- ((as.numeric(isthere_loci))^2)
loci_sum <- sum(loci_sqrd)
####opposite orer of te file --switch those two ---ask Rori
#print(sigma_eq)
sigma_eq <- c(sigma_eq,loci_sum)
exp_homo <- (1/length(sigma_eq[i])*sigma_eq)
exp_heteroZ <- (1-exp_homo)
#print(exp_heteroZ)
}
}
}
}
freq_vec <- c("Afri_paper.csv")
loci_vec <- c("FGA")
#initializes sigma_eq
sigma_eq <- c()
#loop that iterates through the 13 loci in Loci_vec
for (k in 1:length(loci_vec)){
current_loci <- loci_vec[k]
#loop iterates through each CSV file
for( j in 1:length(freq_vec)){
file_name <- read_csv(freq_vec[j])
file_mat <- as.matrix(file_name)
#loop iterates through colums of file and checks if it matches current loci
for (i in 2:dim(file_mat)[2]){
name =  colnames(file_mat)[i]
if(name == current_loci){
loci_vector <- file_mat[,i]
isthere = !is.na(loci_vector)
isthere_loci <- loci_vector[isthere]
#work on the math
loci_sqrd <- ((as.numeric(isthere_loci))^2)
loci_sum <- sum(loci_sqrd)
####opposite orer of te file --switch those two ---ask Rori
#print(sigma_eq)
sigma_eq <- c(sigma_eq,loci_sum)
exp_homo <- (1/length(sigma_eq[i])*sigma_eq)
exp_heteroZ <- (1-exp_homo)
#print(exp_heteroZ)
}
}
}
}
#loop that iterates through the 13 loci in Loci_vec
for (k in 1:length(loci_vec)){
current_loci <- loci_vec[k]
#loop iterates through each CSV file
for( j in 1:length(freq_vec)){
file_name <- read_csv(freq_vec[j])
file_mat <- as.matrix(file_name)
#loop iterates through colums of file and checks if it matches current loci
for (i in 2:dim(file_mat)[2]){
name =  colnames(file_mat)[i]
if(name == current_loci){
loci_vector <- file_mat[,i]
isthere = !is.na(loci_vector)
isthere_loci <- loci_vector[isthere]
print(isthere_loci)
#work on the math
loci_sqrd <- ((as.numeric(isthere_loci))^2)
print(loci_sqrd)
loci_sum <- sum(loci_sqrd)
####opposite orer of te file --switch those two ---ask Rori
#print(sigma_eq)
sigma_eq <- c(sigma_eq,loci_sum)
exp_homo <- (1/length(sigma_eq[i])*sigma_eq)
exp_heteroZ <- (1-exp_homo)
#print(exp_heteroZ)
}
}
}
}
loci_vec <- c("TPOX")
#loop that iterates through the 13 loci in Loci_vec
for (k in 1:length(loci_vec)){
current_loci <- loci_vec[k]
#loop iterates through each CSV file
for( j in 1:length(freq_vec)){
file_name <- read_csv(freq_vec[j])
file_mat <- as.matrix(file_name)
#loop iterates through colums of file and checks if it matches current loci
for (i in 2:dim(file_mat)[2]){
name =  colnames(file_mat)[i]
if(name == current_loci){
loci_vector <- file_mat[,i]
isthere = !is.na(loci_vector)
isthere_loci <- loci_vector[isthere]
print(isthere_loci)
#work on the math
loci_sqrd <- ((as.numeric(isthere_loci))^2)
print(loci_sqrd)
loci_sum <- sum(loci_sqrd)
####opposite orer of te file --switch those two ---ask Rori
#print(sigma_eq)
sigma_eq <- c(sigma_eq,loci_sum)
exp_homo <- (1/length(sigma_eq[i])*sigma_eq)
exp_heteroZ <- (1-exp_homo)
#print(exp_heteroZ)
}
}
}
}
#loop that iterates through the 13 loci in Loci_vec
for (k in 1:length(loci_vec)){
current_loci <- loci_vec[k]
#loop iterates through each CSV file
for( j in 1:length(freq_vec)){
file_name <- read_csv(freq_vec[j])
file_mat <- as.matrix(file_name)
#loop iterates through colums of file and checks if it matches current loci
for (i in 2:dim(file_mat)[2]){
name =  colnames(file_mat)[i]
if(name == current_loci){
loci_vector <- file_mat[,i]
isthere = !is.na(loci_vector)
isthere_loci <- loci_vector[isthere]
#print(isthere_loci)
#work on the math
loci_sqrd <- ((as.numeric(isthere_loci))^2)
print(loci_sqrd)
loci_sum <- sum(loci_sqrd)
####opposite orer of te file --switch those two ---ask Rori
#print(sigma_eq)
sigma_eq <- c(sigma_eq,loci_sum)
exp_homo <- (1/length(sigma_eq[i])*sigma_eq)
exp_heteroZ <- (1-exp_homo)
#print(exp_heteroZ)
}
}
}
}
#print(loci_sqrd)
loci_sum <- sum(loci_sqrd)
print(loci_sum)
#loop that iterates through the 13 loci in Loci_vec
for (k in 1:length(loci_vec)){
current_loci <- loci_vec[k]
#loop iterates through each CSV file
for( j in 1:length(freq_vec)){
file_name <- read_csv(freq_vec[j])
file_mat <- as.matrix(file_name)
#loop iterates through colums of file and checks if it matches current loci
for (i in 2:dim(file_mat)[2]){
name =  colnames(file_mat)[i]
if(name == current_loci){
loci_vector <- file_mat[,i]
isthere = !is.na(loci_vector)
isthere_loci <- loci_vector[isthere]
#print(isthere_loci)
#work on the math
loci_sqrd <- ((as.numeric(isthere_loci))^2)
#print(loci_sqrd)
loci_sum <- sum(loci_sqrd)
#print(loci_sum)
####opposite orer of te file --switch those two ---ask Rori
#print(sigma_eq)
exp_hetero <- (1 -(loci_sum))
print(exp_hetero)
#print(exp_heteroZ)
}
}
}
}
loci_vec <- c("FGA","TPOX","CSF1PO","TH01","D8S1179","D3S1358","D7S820","D16S539",
"D21S11","D2S1338","D19S433",
"vWA","D18S51")
freq_vec <- c("Afri_paper.csv")
#loop that iterates through the 13 loci in Loci_vec
for (k in 1:length(loci_vec)){
current_loci <- loci_vec[k]
#loop iterates through each CSV file
for( j in 1:length(freq_vec)){
file_name <- read_csv(freq_vec[j])
file_mat <- as.matrix(file_name)
#loop iterates through colums of file and checks if it matches current loci
for (i in 2:dim(file_mat)[2]){
name =  colnames(file_mat)[i]
if(name == current_loci){
loci_vector <- file_mat[,i]
isthere = !is.na(loci_vector)
isthere_loci <- loci_vector[isthere]
#print(isthere_loci)
#work on the math
loci_sqrd <- ((as.numeric(isthere_loci))^2)
#print(loci_sqrd)
loci_sum <- sum(loci_sqrd)
#print(loci_sum)
####opposite orer of te file --switch those two ---ask Rori
#print(sigma_eq)
exp_hetero <- (1 -(loci_sum))
print(exp_hetero)
#print(exp_heteroZ)
}
}
}
}
# empty matrix that we will use to
hetero_mat <- matrix(nrow = 13, ncol = length(freq_vec))
#assgns the col name to the matrix from the freq vector (changes)
colnames(hetero_mat) <- freq_vec
#asigns the row name to the matrix (changes)
rownames(hetero_mat) <- loci_vec
View(file_mat)
View(hetero_mat)
exp_hetero <- c()
#loop that iterates through the 13 loci in Loci_vec
for (k in 1:length(loci_vec)){
current_loci <- loci_vec[k]
#loop iterates through each CSV file
for( j in 1:length(freq_vec)){
file_name <- read_csv(freq_vec[j])
file_mat <- as.matrix(file_name)
#loop iterates through colums of file and checks if it matches current loci
for (i in 2:dim(file_mat)[2]){
name =  colnames(file_mat)[i]
if(name == current_loci){
loci_vector <- file_mat[,i]
isthere = !is.na(loci_vector)
isthere_loci <- loci_vector[isthere]
#print(isthere_loci)
#work on the math
loci_sqrd <- ((as.numeric(isthere_loci))^2)
#print(loci_sqrd)
loci_sum <- sum(loci_sqrd)
#print(loci_sum)
####opposite orer of te file --switch those two ---ask Rori
#print(sigma_eq)
exp_hetero <- (1 -(loci_sum))
#print(exp_heteroZ)
}
}
}
}
loci_vec <- c("FGA","TPOX","CSF1PO","TH01","D8S1179","D3S1358","D7S820","D16S539",
"D21S11","D2S1338","D19S433",
"vWA","D18S51")
freq_vec <- c("Afri_paper.csv")
exp_hetero <- c()
#loop that iterates through the 13 loci in Loci_vec
for (k in 1:length(loci_vec)){
current_loci <- loci_vec[k]
#loop iterates through each CSV file
for( j in 1:length(freq_vec)){
file_name <- read_csv(freq_vec[j])
file_mat <- as.matrix(file_name)
#loop iterates through colums of file and checks if it matches current loci
for (i in 2:dim(file_mat)[2]){
name =  colnames(file_mat)[i]
if(name == current_loci){
loci_vector <- file_mat[,i]
isthere = !is.na(loci_vector)
isthere_loci <- loci_vector[isthere]
#print(isthere_loci)
#work on the math
loci_sqrd <- ((as.numeric(isthere_loci))^2)
#print(loci_sqrd)
loci_sum <- sum(loci_sqrd)
#print(loci_sum)
####opposite orer of te file --switch those two ---ask Rori
#print(sigma_eq)
exp_hetero <- (1 -(loci_sum))
#print(exp_heteroZ)
}
}
}
}
exp_hetero
exp_hvec <- c()
#loop that iterates through the 13 loci in Loci_vec
for (k in 1:length(loci_vec)){
current_loci <- loci_vec[k]
#loop iterates through each CSV file
for( j in 1:length(freq_vec)){
file_name <- read_csv(freq_vec[j])
file_mat <- as.matrix(file_name)
#loop iterates through colums of file and checks if it matches current loci
for (i in 2:dim(file_mat)[2]){
name =  colnames(file_mat)[i]
if(name == current_loci){
loci_vector <- file_mat[,i]
isthere = !is.na(loci_vector)
isthere_loci <- loci_vector[isthere]
#print(isthere_loci)
#work on the math
loci_sqrd <- ((as.numeric(isthere_loci))^2)
#print(loci_sqrd)
loci_sum <- sum(loci_sqrd)
#print(loci_sum)
####opposite orer of te file --switch those two ---ask Rori
#print(sigma_eq)
exp_hetero <- (1 -(loci_sum))
exp_hvec <- c(exp_hvec,loci_sum)
#print(exp_heteroZ)
}
}
}
}
exp_hvec
# empty matrix that we will use to
hetero_mat <- matrix(nrow = 13, ncol = length(freq_vec))
#assgns the col name to the matrix from the freq vector (changes)
colnames(hetero_mat) <- freq_vec
#asigns the row name to the matrix (changes)
rownames(hetero_mat) <- loci_vec
hetero_mat
#vector that holds the 11 populations in it
freq_vec <- c("Afri_paper.csv","Apache.csv","Bahamian.csv","Caucasian.csv","Chamorro.csv","Filipino.csv",
"Jamaican.csv","Navajo.csv","seh.csv","swh.csv","Trini.csv")
loci_vec <- c("FGA","TPOX","CSF1PO","TH01","D8S1179","D3S1358","D7S820","D16S539",
"D21S11","D2S1338","D19S433",
"vWA","D18S51")
#intiates the vector that holds all exp heterozygosity values
exp_hvec <- c()
#loop that iterates through the 13 loci in Loci_vec
for (k in 1:length(loci_vec)){
current_loci <- loci_vec[k]
#loop iterates through each CSV file
for( j in 1:length(freq_vec)){
file_name <- read_csv(freq_vec[j])
file_mat <- as.matrix(file_name)
#loop iterates through colums of file and checks if it matches current loci
for (i in 2:dim(file_mat)[2]){
name =  colnames(file_mat)[i]
if(name == current_loci){
loci_vector <- file_mat[,i]
isthere = !is.na(loci_vector)
isthere_loci <- loci_vector[isthere]
#print(isthere_loci)
#work on the math
loci_sqrd <- ((as.numeric(isthere_loci))^2)
#print(loci_sqrd)
loci_sum <- sum(loci_sqrd)
#print(loci_sum)
####opposite orer of te file --switch those two ---ask Rori
#print(sigma_eq)
exp_hetero <- (1 -(loci_sum))
exp_hvec <- c(exp_hvec,loci_sum)
#print(exp_heteroZ)
}
}
}
}
# empty matrix that we will use to
hetero_mat <- matrix(nrow = 13, ncol = length(freq_vec))
#assgns the col name to the matrix from the freq vector (changes)
colnames(hetero_mat) <- freq_vec
#asigns the row name to the matrix (changes)
rownames(hetero_mat) <- loci_vec
hetero_mat
# empty matrix that we will use to
hetero_mat <- matrix(exp_hetero,nrow = 13, ncol = length(freq_vec))
#assgns the col name to the matrix from the freq vector (changes)
colnames(hetero_mat) <- freq_vec
#asigns the row name to the matrix (changes)
rownames(hetero_mat) <- loci_vec
hetero_mat
# empty matrix that we will use to
hetero_mat <- matrix(exp_hvec,nrow = 13, ncol = length(freq_vec))
hetero_mat
# empty matrix that we will use to
hetero_mat <- matrix(exp_hvec,nrow = 13, ncol = length(freq_vec))
#assgns the col name to the matrix from the freq vector (changes)
colnames(hetero_mat) <- freq_vec
#asigns the row name to the matrix (changes)
rownames(hetero_mat) <- loci_vec
hetero_mat
# empty matrix that we will use to
hetero_mat <- matrix(exp_hvec,nrow = 13, ncol = length(freq_vec))
#assgns the col name to the matrix from the freq vector (changes)
colnames(hetero_mat) <- loci_vec
#asigns the row name to the matrix (changes)
rownames(hetero_mat) <- freq_vec
# empty matrix that we will use to
hetero_mat <- matrix(exp_hvec,nrow = 11, ncol = length(loci_vec))
#assgns the col name to the matrix from the freq vector (changes)
colnames(hetero_mat) <- loci_vec
#asigns the row name to the matrix (changes)
rownames(hetero_mat) <- freq_vec
hetero_mat
#Calculate average expected heterozygosity for each population
hetero_mat[,1]
#Calculate average expected heterozygosity for each population
hetero_mat[1,]
mean(hetero_mat[1,])
#intiates the vector that holds all exp heterozygosity values
exp_hvec <- c()
#loop that iterates through the 13 loci in Loci_vec
for (k in 1:length(loci_vec)){
current_loci <- loci_vec[k]
#loop iterates through each CSV file
for( j in 1:length(freq_vec)){
file_name <- read_csv(freq_vec[j])
file_mat <- as.matrix(file_name)
#loop iterates through colums of file and checks if it matches current loci
for (i in 2:dim(file_mat)[2]){
name =  colnames(file_mat)[i]
if(name == current_loci){
loci_vector <- file_mat[,i]
isthere = !is.na(loci_vector)
isthere_loci <- loci_vector[isthere]
print(isthere_loci)
#work on the math
loci_sqrd <- as.numeric(isthere_loci)^2
#print(loci_sqrd)
loci_sum <- sum(loci_sqrd)
#print(loci_sum)
#print(sigma_eq)
exp_hetero <- (1 -(loci_sum))
exp_hvec <- c(exp_hvec,exp_hetero)
print(paste("heterozygosity for locus  ",loci_vec[k],"for pop ",freq_vec[j], "is ",exp_hetero))
}
}
}
}
# empty matrix that we will use to
hetero_mat <- matrix(exp_hvec,nrow = 11, ncol = length(loci_vec))
#assgns the col name to the matrix from the freq vector (changes)
colnames(hetero_mat) <- loci_vec
#asigns the row name to the matrix (changes)
rownames(hetero_mat) <- freq_vec
#Calculate average expected heterozygosity for each population
hetero_mat
View(file_mat)
#loci_vec <- c("FGA","CSF1PO","TH01","D8S1179","D3S1358","D7S820","D16S539",
#"D21S11","D2S1338","D19S433",
#"vWA","D18S51","TPOX")
loci_vec <- c("CSF1PO","D3S1358","D5S818","D7S820","D8S1179","D13S317","D16S539","D18S51","D21S11",
"FGA","TH01","TPOX","VWA","D1S165","D2S441","D2S1338","D10S1248","D12S391","D19S433","D22S1045")
exp_hmat <- matrix(data = NA, nrow = length(file_names), ncol = length(loci_vec))
#loop that iterates through the 13 loci in Loci_vec
for (locus_i in 1:length(loci_vec)){
current_locus <- loci_vec[locus_i]
#print(current_locus)
#loop iterates through each CSV file
for( pop_i in 1:length(file_names)){
#print(file_names[pop_i])
#see if you can stop printing col specifications
afs_matrix <- as.matrix(read.csv(file_names[pop_i]))
#replace
#file_mat <- as.matrix(file_names)
#loop iterates through colums of file and checks if it matches current loci
for (i in 3:dim(afs_matrix)[2]){
#print(paste("in 3rd loop"))
name =  colnames(afs_matrix)[i]
if(name == current_locus){
cur_afs <- afs_matrix[,i]
if (sum(cur_afs) >= 1.01 || sum(cur_afs)<=.99){
print(paste("Sum is too high",locus_vec[locus_i],file_names[pop_i]))
}
#isthere = !is.na(loci_vector)
#isthere_loci <- loci_vector[isthere]
afs_sqrd <- as.numeric(cur_afs)^2
#loci_sum <- sum(afs_sqrd)
exp_hetero <- (1 -(sum(afs_sqrd)))
#where you are putting it/what you are putting in it
exp_hmat[pop_i,locus_i] <- exp_hetero
#print(paste("heterozygosity for locus  ",current_locus,"for pop ",j, "is ",exp_hetero))
}
}
}
}
file_name
